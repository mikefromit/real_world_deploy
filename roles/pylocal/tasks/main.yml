---
- name: Get package full name
  sudo: false
  local_action: shell source {{ pylocal_venv }}/bin/activate && python setup.py --fullname chdir="{{ pylocal_source_dir }}" executable="/bin/bash"
  register: pylocal_lib_fullname_obj

- name: Get package name
  sudo: false
  local_action: shell source {{ pylocal_venv }}/bin/activate && python setup.py --name chdir="{{ pylocal_source_dir }}" executable="/bin/bash"
  register: pylocal_lib_name_obj

- name: Host system
  sudo: false
  local_action: shell uname | tr -d ' '
  register: local_system

- name: Register variables
  set_fact:
    pylocal_lib_fullname: "{{ pylocal_lib_fullname_obj.stdout }}"
    pylocal_lib_name: "{{ pylocal_lib_name_obj.stdout }}"
    local_system: "{{ local_system.stdout }}"

- name: Create source distribution
  sudo: false
  local_action: shell source {{ pylocal_venv }}/bin/activate &&  python setup.py clean sdist chdir="{{ pylocal_source_dir }}" executable="/bin/bash"
  run_once: true

- name: Get distribution file path
  sudo: false
  local_action: shell {{ 'greadlink' if local_system == 'Darwin' else 'readlink' }} --canonicalize dist/{{ pylocal_lib_fullname }}.tar.gz chdir="{{ pylocal_source_dir }}"
  register: pylocal_source_dist_path_obj

- name: Register distribution path
  set_fact:
    pylocal_source_dist_path: "{{ pylocal_source_dist_path_obj.stdout }}"

- name: Ensure destination archive directory exists
  file: >
    path="{{ pylocal_dest_archive_dir }}"
    state=directory

- name: Copy and extract source onto server
  unarchive: >
    src="{{ pylocal_source_dist_path }}"
    dest="{{ pylocal_dest_archive_dir }}"
